<?xml version="1.0"?>
<!--

    Copyright (C) 2012 Red Hat, Inc. (jcasey@redhat.com)

    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
    You may obtain a copy of the License at

            http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.

-->
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <parent>
    <groupId>org.commonjava.maven.ext</groupId>
    <artifactId>pom-manipulation-parent</artifactId>
    <version>1.7-SNAPSHOT</version>
  </parent>

  <artifactId>pom-manipulation-integration-test</artifactId>

  <name>POM Manipulation Integration Tests</name>

  <dependencies>
    <dependency>
      <groupId>org.commonjava.maven.ext</groupId>
      <artifactId>pom-manipulation-ext</artifactId>
    </dependency>
    <dependency>
      <groupId>org.commonjava.maven.ext</groupId>
      <artifactId>pom-manipulation-io</artifactId>
      <type>test-jar</type>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>slf4j-api</artifactId>
    </dependency>
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
    </dependency>
    <dependency>
      <groupId>org.codehaus.groovy</groupId>
      <artifactId>groovy-all</artifactId>
    </dependency>
    <dependency>
      <groupId>org.apache.maven</groupId>
      <artifactId>apache-maven</artifactId>
      <type>zip</type>
      <classifier>bin</classifier>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.eclipse.jetty</groupId>
      <artifactId>jetty-server</artifactId>
      <scope>test</scope>
    </dependency>
  </dependencies>

  <properties>
    <it.maven.home>${project.build.directory}/apache-maven-${mavenVersion}</it.maven.home>
    <cliIter>cli</cliIter>
    <extIter>ext</extIter>
    <localRepositoryUrl>${project.build.directory}/local-repo-${testMode}</localRepositoryUrl>
    <localRepositoryUrlExt>${project.build.directory}/local-repo-${extIter}</localRepositoryUrlExt>
    <localRepositoryUrlCli>${project.build.directory}/local-repo-${cliIter}</localRepositoryUrlCli>
  </properties>

  <build>
    <plugins>
      <plugin>
        <artifactId>maven-dependency-plugin</artifactId>
        <executions>
          <execution>
            <id>copy-pme-cli</id>
            <phase>generate-test-resources</phase>
            <goals>
              <goal>copy</goal>
            </goals>
            <configuration>
              <artifactItems>
                <artifactItem>
                  <groupId>${project.groupId}</groupId>
                  <artifactId>pom-manipulation-cli</artifactId>
                  <version>${project.version}</version>
                  <outputDirectory>${project.build.directory}</outputDirectory>
                  <destFileName>pom-manipulation-cli.jar</destFileName>
                </artifactItem>
              </artifactItems>
            </configuration>
          </execution>
          <execution>
            <id>unpack-maven</id>
            <phase>generate-test-resources</phase>
            <goals>
              <goal>unpack-dependencies</goal>
            </goals>
            <configuration>
              <includeArtifactIds>apache-maven</includeArtifactIds>
              <includeClassifiers>bin</includeClassifiers>
              <includeTypes>zip</includeTypes>
              <outputDirectory>${project.build.directory}</outputDirectory>
            </configuration>
          </execution>
          <execution>
            <id>copy-pme-ext</id>
            <phase>pre-integration-test</phase>
            <goals>
              <goal>copy</goal>
            </goals>
            <configuration>
              <artifactItems>
                <artifactItem>
                  <groupId>${project.groupId}</groupId>
                  <artifactId>pom-manipulation-ext</artifactId>
                  <version>${project.version}</version>
                  <outputDirectory>${it.maven.home}/lib/ext</outputDirectory>
                </artifactItem>
              </artifactItems>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>com.soebes.maven.plugins</groupId>
        <artifactId>iterator-maven-plugin</artifactId>
        <executions>
          <execution>
            <phase>process-test-resources</phase>
            <goals>
              <goal>iterator</goal>
            </goals>
            <configuration>
              <items>
                <item>${extIter}</item>
                <item>${cliIter}</item>
              </items>
              <iteratorName>testMode</iteratorName>
              <pluginExecutors>
                <pluginExecutor>
                  <plugin>
                    <artifactId>maven-resources-plugin</artifactId>
                  </plugin>
                  <goal>copy-resources</goal>
                  <configuration>
                    <outputDirectory>${project.build.directory}</outputDirectory>
                    <escapeString>\</escapeString>
                    <resources>
                      <resource>
                        <directory>src/it</directory>
                        <filtering>true</filtering>
                        <excludes>
                          <exclude>expression-not-rewritten/pom.xml</exclude>
                        </excludes>
                        <targetPath>it-${testMode}</targetPath>
                      </resource>
                      <resource>
                        <directory>src/it</directory>
                        <filtering>false</filtering>
                        <includes>
                          <include>expression-not-rewritten/pom.xml</include>
                        </includes>
                        <targetPath>it-${testMode}</targetPath>
                      </resource>
                    </resources>
                  </configuration>
                </pluginExecutor>
              </pluginExecutors>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <artifactId>maven-invoker-plugin</artifactId>
        <executions>
          <execution>
            <id>integration-test</id>
            <goals>
              <goal>integration-test</goal>
              <goal>verify</goal>
            </goals>
            <configuration>
              <debug>true</debug>
              <goals>
                <goal>clean</goal>
                <goal>package</goal>
              </goals>
              <localRepositoryPath>${localRepositoryUrlExt}</localRepositoryPath>
              <mavenHome>${it.maven.home}</mavenHome>
              <setupIncludes>
                <setupInclude>setup/*/pom.xml</setupInclude>
              </setupIncludes>
              <!-- mavenExecutable>mvnDebug</mavenExecutable -->
              <pomIncludes>
                <!-- <pomInclude>remote-plugin-management-invalid/pom.xml</pomInclude> -->
                <pomInclude>simple-numeric-directory-path/parent/pom.xml</pomInclude>
                <pomInclude>*/pom.xml</pomInclude>
              </pomIncludes>
              <pomExcludes>
                <!-- Only run by JUnit as we need a Mock REST server started -->
                <pomExclude>rest-dependency-version-manip-child-module/pom.xml</pomExclude>
              </pomExcludes>
              <projectsDirectory>${project.build.directory}/it-${extIter}</projectsDirectory>
              <postBuildHookScript>verify</postBuildHookScript>
              <settingsFile>src/it/settings.xml</settingsFile>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-plugin</artifactId>
        <configuration>
          <runOrder>alphabetical</runOrder>
          <systemPropertyVariables>
            <buildDirectory>${project.build.directory}</buildDirectory>
            <maven.home>${it.maven.home}</maven.home>
            <localRepositoryPath>${localRepositoryUrlCli}</localRepositoryPath>
          </systemPropertyVariables>
        </configuration>
      </plugin>
    </plugins>
  </build>
</project>
